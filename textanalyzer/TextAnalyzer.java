/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package textanalyzer;

/**
 *
 * @author aamer
 */
public class TextAnalyzer extends javax.swing.JFrame {

    /**
     * Creates new form TextAnalyzer
     */
    public TextAnalyzer() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        labelHeading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        submitButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();
        ComboBox = new javax.swing.JComboBox<>();
        optionCountDisplayVariable = new javax.swing.JTextField();
        optionDisplay = new javax.swing.JTextField();
        CharacterInput = new javax.swing.JTextField();
        inputDisplay = new javax.swing.JTextField();
        CountOutputOfChar = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();

        jScrollPane2.setViewportView(jTree1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelHeading.setBackground(new java.awt.Color(255, 255, 0));
        labelHeading.setFont(new java.awt.Font("Liberation Serif", 1, 36)); // NOI18N
        labelHeading.setForeground(new java.awt.Color(255, 0, 0));
        labelHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelHeading.setText("<TEXT ANALYZER>");
        labelHeading.setToolTipText("This page use for text analysing");
        labelHeading.setAlignmentX(getAlignmentX());
        labelHeading.setAutoscrolls(true);
        labelHeading.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 0)));
        labelHeading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        TextArea.setColumns(20);
        TextArea.setFont(new java.awt.Font("Liberation Serif", 1, 24)); // NOI18N
        TextArea.setRows(5);
        TextArea.setToolTipText("Enter The Text Here To Analyze");
        TextArea.setBorder(new javax.swing.border.MatteBorder(null));
        TextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(TextArea);

        submitButton.setBackground(new java.awt.Color(255, 0, 0));
        submitButton.setFont(new java.awt.Font("Liberation Serif", 1, 24)); // NOI18N
        submitButton.setForeground(new java.awt.Color(255, 255, 255));
        submitButton.setText("SUBMIT");
        submitButton.setToolTipText("Press To Submit The Text");
        submitButton.setBorder(new javax.swing.border.MatteBorder(null));
        submitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        resultTextArea.setBackground(new java.awt.Color(204, 255, 255));
        resultTextArea.setColumns(20);
        resultTextArea.setFont(new java.awt.Font("Liberation Serif", 1, 36)); // NOI18N
        resultTextArea.setForeground(new java.awt.Color(255, 0, 0));
        resultTextArea.setRows(5);
        resultTextArea.setText("DISPLAY INFORMATION");
        resultTextArea.setToolTipText("Information About Text Is Shown Here");
        resultTextArea.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)));
        resultTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane3.setViewportView(resultTextArea);

        ComboBox.setBackground(new java.awt.Color(255, 0, 0));
        ComboBox.setFont(new java.awt.Font("Liberation Serif", 1, 24)); // NOI18N
        ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        ComboBox.setBorder(new javax.swing.border.MatteBorder(null));
        ComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxActionPerformed(evt);
            }
        });

        optionCountDisplayVariable.setBackground(new java.awt.Color(0, 0, 0));
        optionCountDisplayVariable.setFont(new java.awt.Font("Liberation Serif", 1, 24)); // NOI18N
        optionCountDisplayVariable.setForeground(new java.awt.Color(255, 255, 255));
        optionCountDisplayVariable.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        optionCountDisplayVariable.setText("OUTPUT");
        optionCountDisplayVariable.setToolTipText("Number Of Count Of Option In Text Is Diplay Here");
        optionCountDisplayVariable.setBorder(new javax.swing.border.MatteBorder(null));
        optionCountDisplayVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionCountDisplayVariableActionPerformed(evt);
            }
        });

        optionDisplay.setFont(new java.awt.Font("Liberation Serif", 1, 24)); // NOI18N
        optionDisplay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        optionDisplay.setText("Option Input");
        optionDisplay.setToolTipText("Option Choosed Are Shown Here");
        optionDisplay.setBorder(new javax.swing.border.MatteBorder(null));
        optionDisplay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        optionDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionDisplayActionPerformed(evt);
            }
        });

        CharacterInput.setBackground(new java.awt.Color(102, 102, 102));
        CharacterInput.setFont(new java.awt.Font("Liberation Serif", 1, 24)); // NOI18N
        CharacterInput.setForeground(new java.awt.Color(255, 255, 255));
        CharacterInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CharacterInput.setText("Enter");
        CharacterInput.setBorder(new javax.swing.border.MatteBorder(null));
        CharacterInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CharacterInputActionPerformed(evt);
            }
        });

        inputDisplay.setFont(new java.awt.Font("Liberation Serif", 1, 24)); // NOI18N
        inputDisplay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputDisplay.setText("Typed Input");
        inputDisplay.setToolTipText("Typed Input Is Shown Here");
        inputDisplay.setBorder(new javax.swing.border.MatteBorder(null));
        inputDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputDisplayActionPerformed(evt);
            }
        });

        CountOutputOfChar.setBackground(new java.awt.Color(0, 0, 0));
        CountOutputOfChar.setFont(new java.awt.Font("Liberation Serif", 1, 24)); // NOI18N
        CountOutputOfChar.setForeground(new java.awt.Color(255, 255, 255));
        CountOutputOfChar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CountOutputOfChar.setText("OUTPUT");
        CountOutputOfChar.setBorder(new javax.swing.border.MatteBorder(null));
        CountOutputOfChar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountOutputOfCharActionPerformed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Liberation Serif", 1, 15)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText("Developed By : Md Aamer");
        nameLabel.setToolTipText("Enter Character To Count In Given Text");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(optionDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                    .addComponent(inputDisplay))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CharacterInput, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(CountOutputOfChar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(optionCountDisplayVariable))))
                            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CharacterInput, ComboBox, CountOutputOfChar, inputDisplay, optionCountDisplayVariable, optionDisplay});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelHeading)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(optionCountDisplayVariable, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(optionDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CharacterInput, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                .addComponent(inputDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(CountOutputOfChar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(0, 0, 0)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CharacterInput, ComboBox, CountOutputOfChar, inputDisplay, optionCountDisplayVariable, optionDisplay});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        
        int itemCount = ComboBox.getItemCount();
        for(int i=0;i<itemCount;i++)
        {
            if((ComboBox.getItemAt(1)==null)==false)
            ComboBox.removeItemAt(1);
        }
        
        inputText = TextArea.getText();
        
        fun = new TextAnalyzerHelper(inputText);
        
         uniqueString = fun.getDropDownOptionAsString();
        for(int i=0;i<uniqueString.length();i++)
        {
            ComboBox.addItem(uniqueString.charAt(i)+"");
        }
        
        resultTextArea.setText("DISPLAY INFORMATION "+"\n"+fun+"");
        // TODO add your handling code here:
    }//GEN-LAST:event_submitButtonActionPerformed

    private void ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxActionPerformed

        String selectedOption = ComboBox.getSelectedItem()+"";
        optionDisplay.setText(selectedOption);
        int count = fun.letterCountsInText(selectedOption);
        optionCountDisplayVariable.setText(Integer.toString(count));
    }//GEN-LAST:event_ComboBoxActionPerformed

    private void optionCountDisplayVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionCountDisplayVariableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optionCountDisplayVariableActionPerformed

    private void CharacterInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CharacterInputActionPerformed

// TODO add your handling code here:
        String input  = CharacterInput.getText();
        inputDisplay.setText(input);
        int count = fun.letterCountsInText(input);
        CountOutputOfChar.setText(Integer.toString(count));
    }//GEN-LAST:event_CharacterInputActionPerformed

    private void inputDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputDisplayActionPerformed

    private void CountOutputOfCharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountOutputOfCharActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CountOutputOfCharActionPerformed

    private void optionDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optionDisplayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextAnalyzer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CharacterInput;
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JTextField CountOutputOfChar;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JTextField inputDisplay;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel labelHeading;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField optionCountDisplayVariable;
    private javax.swing.JTextField optionDisplay;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables

    private String inputText;
    private String uniqueString="";
    TextAnalyzerHelper fun;
}
